{"version":3,"sources":["views/pages/account-settings/Tabs.js","views/pages/account-settings/InfoTabContent.js","views/pages/account-settings/SocialTabContent.js","views/pages/account-settings/GeneralTabContent.js","views/pages/account-settings/PasswordTabContent.js","views/pages/account-settings/NotificationsTabContent.js","views/pages/account-settings/index.js","@core/components/breadcrumbs/index.js","@core/components/input-password-toggle/index.js"],"names":["Tabs","activeTab","toggleTab","Nav","className","pills","vertical","NavItem","NavLink","active","onClick","size","InfoTabContent","data","useState","bio","setBio","dob","setDob","phone","setPhone","website","setWebsite","country","setCountry","onSubmit","e","preventDefault","Row","Col","sm","FormGroup","Label","for","Input","id","type","rows","placeholder","value","onChange","target","tag","Flatpickr","name","date","required","Button","Ripple","color","outline","SocialTabContent","socialLinks","twitter","setTwitter","facebook","setFacebook","google","setGoogle","linkedIn","setLinkedIn","instagram","setInstagram","quora","setQuora","Form","md","xs","isObjEmpty","connections","img","profileImg","imgHeight","imgWidth","href","github","GeneralTabs","email","setEmail","fullName","setName","avatar","setAvatar","company","setCompany","username","setUsername","Media","left","object","src","alt","height","width","body","reader","FileReader","files","onload","result","readAsDataURL","hidden","accept","Alert","PasswordTabContent","AvInput","label","htmlFor","NotificationsTabContent","followMe","setFollowMe","blogDigest","setBlogDigest","answerOnForm","setAnswerOnForm","productUpdates","setProductUpdates","newAnnouncements","setNewAnnouncements","commentOnArticle","setCommentOnArticle","CustomInput","checked","AccountSettings","setActiveTab","setData","useEffect","axios","get","then","response","breadCrumbTitle","breadCrumbParent","breadCrumbActive","tab","Card","CardBody","TabContent","TabPane","tabId","GeneralTabContent","general","info","social","notification","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","to","right","Link","InputPasswordToggle","hideIcon","showIcon","visible","iconSize","rest","inputVisibility","setInputVisibility","classnames","addonType","renderIcon","defaultProps"],"mappings":"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","file":"static/js/122.4df264f4.chunk.js","sourcesContent":["import { Nav, NavItem, NavLink } from 'reactstrap'\nimport { User, Lock, Info, Link, Bell } from 'react-feather'\n\nconst Tabs = ({ activeTab, toggleTab }) => {\n  return (\n    <Nav className='nav-left' pills vertical>\n      <NavItem>\n        <NavLink active={activeTab === '1'} onClick={() => toggleTab('1')}>\n          <User size={18} className='mr-1' />\n          <span className='font-weight-bold'>General</span>\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink active={activeTab === '2'} onClick={() => toggleTab('2')}>\n          <Lock size={18} className='mr-1' />\n          <span className='font-weight-bold'>Change Password</span>\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink active={activeTab === '3'} onClick={() => toggleTab('3')}>\n          <Info size={18} className='mr-1' />\n          <span className='font-weight-bold'>Information</span>\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink active={activeTab === '4'} onClick={() => toggleTab('4')}>\n          <Link size={18} className='mr-1' />\n          <span className='font-weight-bold'>Social</span>\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink active={activeTab === '5'} onClick={() => toggleTab('5')}>\n          <Bell size={18} className='mr-1' />\n          <span className='font-weight-bold'>Notifications</span>\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\n\nexport default Tabs\n","import { useState } from 'react'\nimport Flatpickr from 'react-flatpickr'\nimport { AvForm, AvInput } from 'availity-reactstrap-validation-safe'\nimport { Label, Input, FormGroup, Row, Col, Button } from 'reactstrap'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\nconst InfoTabContent = ({ data }) => {\n  const [bio, setBio] = useState(data.bio ? data.bio : '')\n  const [dob, setDob] = useState(data.dob ? data.dob : '')\n  const [phone, setPhone] = useState(data.phone ? data.phone : '')\n  const [website, setWebsite] = useState(data.website ? data.website : '')\n  const [country, setCountry] = useState(data.country ? data.country : '')\n\n  return (\n    <AvForm onSubmit={e => e.preventDefault()}>\n      <Row>\n        <Col sm='12'>\n          <FormGroup>\n            <Label for='bio'>Bio</Label>\n            <Input\n              id='bio'\n              type='textarea'\n              rows='4'\n              placeholder='Your Bio data here...'\n              value={bio}\n              onChange={e => setBio(e.target.value)}\n            />\n          </FormGroup>\n        </Col>\n        <Col sm='6'>\n          <FormGroup>\n            <Label for='birth-date'>Birth Date</Label>\n            <AvInput\n              tag={Flatpickr}\n              name='dob'\n              className='form-control'\n              value={dob}\n              onChange={date => setDob(date)}\n              id='birth-date'\n              placeholder='Birth Date'\n              required\n            />\n          </FormGroup>\n        </Col>\n        <Col sm='6'>\n          <FormGroup>\n            <Label for='country'>Country</Label>\n            <Input id='country' type='select' value={country} onChange={e => setCountry(e.target.value)}>\n              <option value='USA'>USA</option>\n              <option value='France'>France</option>\n              <option value='Canada'>Canada</option>\n            </Input>\n          </FormGroup>\n        </Col>\n        <Col sm='6'>\n          <FormGroup>\n            <Label for='website'>Website</Label>\n            <AvInput\n              type='url'\n              id='website'\n              name='website'\n              value={website}\n              onChange={e => setWebsite(e.target.value)}\n              placeholder='Website Address'\n              required\n            />\n          </FormGroup>\n        </Col>\n        <Col sm='6'>\n          <FormGroup>\n            <Label for='phone'>Phone</Label>\n            <Input id='phone' value={phone} onChange={e => setPhone(e.target.value)} placeholder='Phone Number' />\n          </FormGroup>\n        </Col>\n        <Col className='mt-1' sm='12'>\n          <Button.Ripple className='mr-1' color='primary'>\n            Save changes\n          </Button.Ripple>\n          <Button.Ripple color='secondary' outline>\n            Cancel\n          </Button.Ripple>\n        </Col>\n      </Row>\n    </AvForm>\n  )\n}\n\nexport default InfoTabContent\n","import { useState, Fragment } from 'react'\nimport { isObjEmpty } from '@utils'\nimport Avatar from '@components/avatar'\nimport { Link, User } from 'react-feather'\nimport { Form, Label, Input, Button, Row, Col, FormGroup } from 'reactstrap'\n\nconst SocialTabContent = ({ data }) => {\n  const [twitter, setTwitter] = useState(data.socialLinks.twitter ? data.socialLinks.twitter : '')\n  const [facebook, setFacebook] = useState(data.socialLinks.facebook ? data.socialLinks.facebook : '')\n  const [google, setGoogle] = useState(data.socialLinks.google ? data.socialLinks.google : '')\n  const [linkedIn, setLinkedIn] = useState(data.socialLinks.linkedIn ? data.socialLinks.linkedIn : '')\n  const [instagram, setInstagram] = useState(data.socialLinks.instagram ? data.socialLinks.instagram : '')\n  const [quora, setQuora] = useState(data.socialLinks.quora ? data.socialLinks.quora : '')\n\n  const renderTwitterConnection = () => {\n    if (!isObjEmpty(data.connections.twitter)) {\n      return (\n        <Fragment>\n          <Avatar className='mb-1' img={data.connections.twitter.profileImg} imgHeight='40' imgWidth='40' />\n          <p className='mb-0'>@{data.connections.twitter.id}</p>\n          <a href='/' onClick={e => e.preventDefault()}>\n            Disconnect\n          </a>\n        </Fragment>\n      )\n    } else {\n      return (\n        <Button.Ripple color='primary' outline>\n          Connect\n        </Button.Ripple>\n      )\n    }\n  }\n\n  const renderFacebookConnection = () => {\n    if (!isObjEmpty(data.connections.facebook)) {\n      return (\n        <Fragment>\n          <Avatar className='mb-1' img={data.connections.facebook.profileImg} imgHeight='40' imgWidth='40' />\n          <p className='mb-0'>@{data.connections.facebook.id}</p>\n          <a href='/' onClick={e => e.preventDefault()}>\n            Disconnect\n          </a>\n        </Fragment>\n      )\n    } else {\n      return (\n        <Button.Ripple color='primary' outline>\n          Connect\n        </Button.Ripple>\n      )\n    }\n  }\n\n  const renderGoogleConnection = () => {\n    if (!isObjEmpty(data.connections.google)) {\n      return (\n        <Fragment>\n          <Avatar className='mb-1' img={data.connections.google.profileImg} imgHeight='40' imgWidth='40' />\n          <p className='mb-0'>@{data.connections.google.id}</p>\n          <a href='/' onClick={e => e.preventDefault()}>\n            Disconnect\n          </a>\n        </Fragment>\n      )\n    } else {\n      return (\n        <Button.Ripple color='primary' outline>\n          Connect\n        </Button.Ripple>\n      )\n    }\n  }\n\n  const renderGithubConnection = () => {\n    if (!isObjEmpty(data.connections.github)) {\n      return (\n        <Fragment>\n          <Avatar className='mb-1' img={data.connections.github.profileImg} imgHeight='40' imgWidth='40' />\n          <p className='mb-0'>@{data.connections.github.id}</p>\n          <a href='/' onClick={e => e.preventDefault()}>\n            Disconnect\n          </a>\n        </Fragment>\n      )\n    } else {\n      return (\n        <Button.Ripple color='primary' outline>\n          Connect\n        </Button.Ripple>\n      )\n    }\n  }\n\n  return (\n    <Form onSubmit={e => e.preventDefault()}>\n      <Row>\n        <Col sm='12'>\n          <div className='d-flex align-items-center mb-2'>\n            <Link size={18} />\n            <h4 className='mb-0 ml-75'>Social Links</h4>\n          </div>\n        </Col>\n        <Col sm='6'>\n          <FormGroup>\n            <Label for='account-twitter'>Twitter</Label>\n            <Input\n              id='account-twitter'\n              value={twitter}\n              onChange={e => setTwitter(e.target.value)}\n              placeholder='Add Link'\n            />\n          </FormGroup>\n        </Col>\n        <Col sm='6'>\n          <FormGroup>\n            <Label for='account-facebook'>Facebook</Label>\n            <Input\n              id='account-facebook'\n              value={facebook}\n              onChange={e => setFacebook(e.target.value)}\n              placeholder='Add Link'\n            />\n          </FormGroup>\n        </Col>\n        <Col sm='6'>\n          <FormGroup>\n            <Label for='account-google'>Google</Label>\n            <Input\n              id='account-google'\n              value={google}\n              onChange={e => setGoogle(e.target.value)}\n              placeholder='Add Link'\n            />\n          </FormGroup>\n        </Col>\n        <Col sm='6'>\n          <FormGroup>\n            <Label for='account-linkedIn'>LinkedIn</Label>\n            <Input\n              id='account-linkedIn'\n              value={linkedIn}\n              onChange={e => setLinkedIn(e.target.value)}\n              placeholder='Add Link'\n            />\n          </FormGroup>\n        </Col>\n        <Col sm='6'>\n          <FormGroup>\n            <Label for='account-instagram'>Instagram</Label>\n            <Input\n              id='account-instagram'\n              value={instagram}\n              onChange={e => setInstagram(e.target.value)}\n              placeholder='Add Link'\n            />\n          </FormGroup>\n        </Col>\n        <Col sm='6'>\n          <FormGroup>\n            <Label for='account-quora'>Quora</Label>\n            <Input id='account-quora' value={quora} onChange={e => setQuora(e.target.value)} placeholder='Add Link' />\n          </FormGroup>\n        </Col>\n        <Col sm='12'>\n          <hr className='my-2' />\n        </Col>\n        <Col className='mt-1' sm='12'>\n          <div className='d-flex align-items-center mb-3'>\n            <User size={18} />\n            <h4 className='mb-0 ml-75'>Profile Connections</h4>\n          </div>\n          <Row>\n            <Col className='text-center mb-1' md='3' xs='6'>\n              <p className='font-weight-bold'>Your Twitter</p>\n              {renderTwitterConnection()}\n            </Col>\n            <Col className='text-center mb-1' md='3' xs='6'>\n              <p className='font-weight-bold'>Your Facebook</p>\n              {renderFacebookConnection()}\n            </Col>\n            <Col className='text-center mb-1' md='3' xs='6'>\n              <p className='font-weight-bold'>Your Google</p>\n              {renderGoogleConnection()}\n            </Col>\n            <Col className='text-center mb-1' md='3' xs='6'>\n              <p className='font-weight-bold'>Your Github</p>\n              {renderGithubConnection()}\n            </Col>\n          </Row>\n        </Col>\n        <Col className='mt-1' sm='12'>\n          <Button.Ripple className='mr-1' color='primary'>\n            Save changes\n          </Button.Ripple>\n          <Button.Ripple color='secondary' outline>\n            Cancel\n          </Button.Ripple>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n\nexport default SocialTabContent\n","import { Fragment, useState } from 'react'\nimport { AvForm, AvInput } from 'availity-reactstrap-validation-safe'\nimport { Button, Media, Label, Row, Col, Input, FormGroup, Alert } from 'reactstrap'\n\nconst GeneralTabs = ({ data }) => {\n  const [email, setEmail] = useState(data.email ? data.email : '')\n  const [name, setName] = useState(data.fullName ? data.fullName : '')\n  const [avatar, setAvatar] = useState(data.avatar ? data.avatar : '')\n  const [company, setCompany] = useState(data.company ? data.company : '')\n  const [username, setUsername] = useState(data.username ? data.username : '')\n\n  const onChange = e => {\n    const reader = new FileReader(),\n      files = e.target.files\n    reader.onload = function () {\n      setAvatar(reader.result)\n    }\n    reader.readAsDataURL(files[0])\n  }\n\n  return (\n    <Fragment>\n      <Media>\n        <Media className='mr-25' left>\n          <Media object className='rounded mr-50' src={avatar} alt='Generic placeholder image' height='80' width='80' />\n        </Media>\n        <Media className='mt-75 ml-1' body>\n          <Button.Ripple tag={Label} className='mr-75' size='sm' color='primary'>\n            Upload\n            <Input type='file' onChange={onChange} hidden accept='image/*' />\n          </Button.Ripple>\n          <Button.Ripple color='secondary' size='sm' outline>\n            Reset\n          </Button.Ripple>\n          <p>Allowed JPG, GIF or PNG. Max size of 800kB</p>\n        </Media>\n      </Media>\n      <AvForm className='mt-2' onSubmit={e => e.preventDefault()}>\n        <Row>\n          <Col sm='6'>\n            <FormGroup>\n              <Label for='username'>Username</Label>\n              <AvInput\n                id='username'\n                name='username'\n                value={username}\n                onChange={e => setUsername(e.target.value)}\n                placeholder='Username'\n                required\n              />\n            </FormGroup>\n          </Col>\n          <Col sm='6'>\n            <FormGroup>\n              <Label for='name'>Name</Label>\n              <AvInput\n                id='name'\n                name='fullname'\n                value={name}\n                onChange={e => setName(e.target.value)}\n                placeholder='Name'\n                required\n              />\n            </FormGroup>\n          </Col>\n          <Col sm='6'>\n            <FormGroup>\n              <Label for='email'>E-mail</Label>\n              <AvInput\n                type='email'\n                id='email'\n                name='email'\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                placeholder='Email'\n                required\n              />\n            </FormGroup>\n          </Col>\n          <Col sm='6'>\n            <FormGroup>\n              <Label for='company'>Company</Label>\n              <AvInput\n                id='company'\n                name='company'\n                value={company}\n                onChange={e => setCompany(e.target.value)}\n                placeholder='Company Name'\n                required\n              />\n            </FormGroup>\n          </Col>\n          <Col className='mt-75' sm='12'>\n            <Alert className='mb-50' color='warning'>\n              <h4 className='alert-heading'>Your email is not confirmed. Please check your inbox.</h4>\n              <div className='alert-body'>\n                <a href='/' className='alert-link' onClick={e => e.preventDefault()}>\n                  Resend confirmation\n                </a>\n              </div>\n            </Alert>\n          </Col>\n          <Col className='mt-2' sm='12'>\n            <Button.Ripple className='mr-1' color='primary'>\n              Save changes\n            </Button.Ripple>\n            <Button.Ripple color='secondary' outline>\n              Cancel\n            </Button.Ripple>\n          </Col>\n        </Row>\n      </AvForm>\n    </Fragment>\n  )\n}\n\nexport default GeneralTabs\n","import { FormGroup, Row, Col, Button } from 'reactstrap'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { AvForm, AvInput } from 'availity-reactstrap-validation-safe'\n\nconst PasswordTabContent = () => {\n  return (\n    <AvForm onSubmit={e => e.preventDefault()}>\n      <Row>\n        <Col sm='6'>\n          <FormGroup>\n            <InputPasswordToggle\n              tag={AvInput}\n              className='input-group-merge'\n              label='Old Password'\n              htmlFor='old-password'\n              name='old-password'\n              required\n            />\n          </FormGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm='6'>\n          <FormGroup>\n            <InputPasswordToggle\n              tag={AvInput}\n              className='input-group-merge'\n              label='New Password'\n              htmlFor='new-password'\n              name='new-password'\n              required\n            />\n          </FormGroup>\n        </Col>\n        <Col sm='6'>\n          <FormGroup>\n            <InputPasswordToggle\n              tag={AvInput}\n              className='input-group-merge'\n              label='Retype New Password'\n              htmlFor='retype-new-password'\n              name='retype-new-password'\n              required\n            />\n          </FormGroup>\n        </Col>\n        <Col className='mt-1' sm='12'>\n          <Button.Ripple className='mr-1' color='primary'>\n            Save changes\n          </Button.Ripple>\n          <Button.Ripple color='secondary' outline>\n            Cancel\n          </Button.Ripple>\n        </Col>\n      </Row>\n    </AvForm>\n  )\n}\n\nexport default PasswordTabContent\n","import { useState } from 'react'\nimport { Row, Col, CustomInput, Button } from 'reactstrap'\n\nconst NotificationsTabContent = ({ data }) => {\n  const [followMe, setFollowMe] = useState(data.followMe)\n  const [blogDigest, setBlogDigest] = useState(data.blogDigest)\n  const [answerOnForm, setAnswerOnForm] = useState(data.answerOnForm)\n  const [productUpdates, setProductUpdates] = useState(data.productUpdates)\n  const [newAnnouncements, setNewAnnouncements] = useState(data.newAnnouncements)\n  const [commentOnArticle, setCommentOnArticle] = useState(data.commentOnArticle)\n\n  return (\n    <Row>\n      <h6 className='section-label mx-1 mb-2'>Activity</h6>\n      <Col sm='12' className='mb-2'>\n        <CustomInput\n          type='switch'\n          id='commentOnArticle'\n          checked={commentOnArticle}\n          onChange={e => setCommentOnArticle(e.target.checked)}\n          name='customSwitch'\n          label='Email me when someone comments on my article'\n        />\n      </Col>\n      <Col sm='12' className='mb-2'>\n        <CustomInput\n          type='switch'\n          id='answerOnForm'\n          checked={answerOnForm}\n          onChange={e => setAnswerOnForm(e.target.checked)}\n          name='customSwitch'\n          label='Email me when someone answers on my form'\n        />\n      </Col>\n      <Col sm='12' className='mb-2'>\n        <CustomInput\n          type='switch'\n          id='followMe'\n          checked={followMe}\n          onChange={e => setFollowMe(e.target.checked)}\n          name='customSwitch'\n          label='Email me when someone follows me'\n        />\n      </Col>\n      <h6 className='section-label mx-1 mt-2'>Application</h6>\n      <Col sm='12' className='mt-1 mb-2'>\n        <CustomInput\n          type='switch'\n          id='newAnnouncements'\n          checked={newAnnouncements}\n          onChange={e => setNewAnnouncements(e.target.checked)}\n          name='customSwitch'\n          label='News and announcements'\n        />\n      </Col>\n      <Col sm='12' className='mb-2'>\n        <CustomInput\n          type='switch'\n          id='productUpdates'\n          checked={productUpdates}\n          onChange={e => setProductUpdates(e.target.checked)}\n          name='customSwitch'\n          label='Weekly product updates'\n        />\n      </Col>\n      <Col sm='12' className='mb-75'>\n        <CustomInput\n          type='switch'\n          id='blogDigest'\n          checked={blogDigest}\n          onChange={e => setBlogDigest(e.target.checked)}\n          name='customSwitch'\n          label='Weekly blog digest'\n        />\n      </Col>\n      <Col className='mt-1' sm='12'>\n        <Button.Ripple className='mr-1' color='primary'>\n          Save changes\n        </Button.Ripple>\n        <Button.Ripple color='secondary' outline>\n          Cancel\n        </Button.Ripple>\n      </Col>\n    </Row>\n  )\n}\n\nexport default NotificationsTabContent\n","import { Fragment, useState, useEffect } from 'react'\nimport Tabs from './Tabs'\nimport axios from 'axios'\nimport InfoTabContent from './InfoTabContent'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport SocialTabContent from './SocialTabContent'\nimport GeneralTabContent from './GeneralTabContent'\nimport PasswordTabContent from './PasswordTabContent'\nimport NotificationsTabContent from './NotificationsTabContent'\nimport { Row, Col, TabContent, TabPane, Card, CardBody } from 'reactstrap'\n\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/react/pages/page-account-settings.scss'\n\nconst AccountSettings = () => {\n  const [activeTab, setActiveTab] = useState('1'),\n    [data, setData] = useState(null)\n\n  const toggleTab = tab => {\n    setActiveTab(tab)\n  }\n\n  useEffect(() => {\n    axios.get('/account-setting/data').then(response => setData(response.data))\n  }, [])\n\n  return (\n    <Fragment>\n      <Breadcrumbs breadCrumbTitle='Account Settings' breadCrumbParent='Pages' breadCrumbActive='Account Settings' />\n      {data !== null ? (\n        <Row>\n          <Col className='mb-2 mb-md-0' md='3'>\n            <Tabs activeTab={activeTab} toggleTab={toggleTab} />\n          </Col>\n          <Col md='9'>\n            <Card>\n              <CardBody>\n                <TabContent activeTab={activeTab}>\n                  <TabPane tabId='1'>\n                    <GeneralTabContent data={data.general} />\n                  </TabPane>\n                  <TabPane tabId='2'>\n                    <PasswordTabContent />\n                  </TabPane>\n                  <TabPane tabId='3'>\n                    <InfoTabContent data={data.info} />\n                  </TabPane>\n                  <TabPane tabId='4'>\n                    <SocialTabContent data={data.social} />\n                  </TabPane>\n                  <TabPane tabId='5'>\n                    <NotificationsTabContent data={data.notification} />\n                  </TabPane>\n                </TabContent>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      ) : null}\n    </Fragment>\n  )\n}\n\nexport default AccountSettings\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = props => {\n  // ** Props\n  const { label, hideIcon, showIcon, visible, className, htmlFor, placeholder, iconSize, ...rest } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\n      <InputGroup\n        className={classnames({\n          [className]: className\n        })}\n      >\n        <Input\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  label(props, propName, componentName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName, componentName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"sourceRoot":""}