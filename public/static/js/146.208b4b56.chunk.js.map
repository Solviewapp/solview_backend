{"version":3,"sources":["views/pages/pricing/PricingFaqs.js","views/pages/pricing/PricingCards.js","assets/images/illustration/pricing-Illustration.svg","views/pages/pricing/PricingTrial.js","views/pages/pricing/PricingHeader.js","views/pages/pricing/index.js","@core/components/app-collapse/index.js"],"names":["PricingFaqs","data","className","Row","Col","sm","lg","size","offset","type","titleKey","contentKey","accordion","PricingCards","duration","md","map","item","index","monthlyPrice","yearlyPlan","perMonth","yearlyPrice","totalAnnual","imgClasses","title","xs","Card","classnames","toLowerCase","popular","CardBody","Badge","color","pill","src","img","alt","CardText","subtitle","ListGroup","tag","planBenefits","benefit","i","ListGroupItem","Button","Ripple","outline","block","PricingTrial","trialSvg","style","transform","PricingHeader","setDuration","CustomInput","id","checked","onChange","e","target","Pricing","useState","setData","faq","setFaq","useEffect","axios","get","then","res","dataArr","faqArr","Object","entries","forEach","key","val","push","AppCollapse","props","active","toggle","openCollapse","setOpenCollapse","handleCollapseToggle","arr","indexOf","includes","splice","content","collapsed","onMouseEnter","onClick","isOpen","defaultProps"],"mappings":"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","file":"static/js/146.208b4b56.chunk.js","sourcesContent":["import { Row, Col } from 'reactstrap'\nimport AppCollapse from '@components/app-collapse'\n\nconst PricingFaqs = ({ data }) => {\n  return (\n    <div className='pricing-faq'>\n      <h3 className='text-center'>FAQ's</h3>\n      <p className='text-center'>Let us help answer the most common questions.</p>\n      <Row className='my-2'>\n        <Col className='mx-auto' sm='12' lg={{ size: 10, offset: 2 }}>\n          <AppCollapse type='margin' data={data} titleKey='question' contentKey='ans' accordion />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default PricingFaqs\n","import classnames from 'classnames'\nimport { Row, Col, Card, CardBody, CardText, Badge, ListGroup, ListGroupItem, Button } from 'reactstrap'\n\nconst PricingCards = ({ data, duration }) => {\n  const renderPricingCards = () => {\n    return data.map((item, index) => {\n      const monthlyPrice = duration === 'yearly' ? item.yearlyPlan.perMonth : item.monthlyPrice,\n        yearlyPrice = duration === 'yearly' ? item.yearlyPlan.totalAnnual : item.monthlyPrice,\n        imgClasses = item.title === 'Basic' ? 'mb-2 mt-5' : item.title === 'Standard' ? 'mb-1' : 'mb-2'\n      return (\n        <Col key={index} md='4' xs='12'>\n          <Card\n            className={classnames('text-center', {\n              [`${item.title.toLowerCase()}-pricing`]: item.title,\n              popular: item.popular === true\n            })}\n          >\n            <CardBody>\n              {item.popular === true ? (\n                <div className='pricing-badge text-right'>\n                  <Badge color='light-primary' pill>\n                    Popular\n                  </Badge>\n                </div>\n              ) : null}\n              <img className={imgClasses} src={item.img} alt='pricing svg' />\n              <h3>{item.title}</h3>\n              <CardText>{item.subtitle}</CardText>\n              <div className='annual-plan'>\n                <div className='plan-price mt-2'>\n                  <sup className='font-medium-1 font-weight-bold text-primary mr-25'>$</sup>\n                  <span className={`pricing-${item.title.toLowerCase()}-value font-weight-bolder text-primary`}>\n                    {monthlyPrice}\n                  </span>\n                  <span className='pricing-duration text-body font-medium-1 font-weight-bold ml-25'>/month</span>\n                </div>\n                {item.title !== 'Basic' && duration === 'yearly' ? (\n                  <small className='annual-pricing text-muted'>USD {yearlyPrice} / year</small>\n                ) : null}\n              </div>\n              <ListGroup tag='ul' className='list-group-circle text-left mb-2'>\n                {item.planBenefits.map((benefit, i) => (\n                  <ListGroupItem key={i} tag='li'>\n                    {benefit}\n                  </ListGroupItem>\n                ))}\n              </ListGroup>\n              <Button.Ripple\n                color={item.title === 'Basic' ? 'success' : 'primary'}\n                outline={item.title !== 'Standard'}\n                block\n              >\n                {item.title === 'Basic' ? 'Your current plan' : 'Upgrade'}\n              </Button.Ripple>\n            </CardBody>\n          </Card>\n        </Col>\n      )\n    })\n  }\n\n  return (\n    <Row className='pricing-card'>\n      <Col className='mx-auto' sm={{ offset: 2, size: 10 }} lg={{ offset: 2, size: 10 }} md='12'>\n        <Row>{renderPricingCards()}</Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default PricingCards\n","export default __webpack_public_path__ + \"static/media/pricing-Illustration.b00baee8.svg\";","import { Row, Col, Button } from 'reactstrap'\nimport trialSvg from '@src/assets/images/illustration/pricing-Illustration.svg'\n\nconst PricingTrial = () => {\n  return (\n    <div className='pricing-free-trial'>\n      <Row>\n        <Col className='mx-auto' lg={{ size: 10, offset: 3 }} sm='12'>\n          <div className='pricing-trial-content d-flex justify-content-between'>\n            <div className='text-center text-md-left mt-3'>\n              <h3 className='text-primary'>Still not convinced? Start with a 14-day FREE trial!</h3>\n              <h5>You will get full access to with all the features for 14 days.</h5>\n              <div className='mt-2 mt-lg-3'>\n                <Button.Ripple color='primary'>Start 14-day FREE trial</Button.Ripple>\n              </div>\n            </div>\n            <img\n              className='pricing-trial-img img-fluid'\n              src={trialSvg}\n              alt='trial svg'\n              style={{\n                transform: 'scaleX(1)'\n              }}\n            />\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default PricingTrial\n","import { duration } from 'moment'\nimport { CustomInput } from 'reactstrap'\n\nconst PricingHeader = ({ duration, setDuration }) => {\n  const onChange = e => {\n    if (e.target.checked) {\n      setDuration('yearly')\n    } else {\n      setDuration('monthly')\n    }\n  }\n\n  return (\n    <div className='text-center'>\n      <h1 className='mt-5'>Pricing Plans</h1>\n      <p className='mb-2 pb-75'>\n        All plans include 40+ advanced tools and features to boost your product. Choose the best plan to fit your needs.\n      </p>\n      <div className='d-flex align-items-center justify-content-center mb-5 pb-50'>\n        <h6 className='mr-1 mb-0'>Monthly</h6>\n        <CustomInput id='plan-switch' type='switch' checked={duration === 'yearly'} onChange={onChange} />\n        <h6 className='ml-50 mb-0'>Annually</h6>\n      </div>\n    </div>\n  )\n}\n\nexport default PricingHeader\n","import { useState, useEffect, Fragment } from 'react'\nimport axios from 'axios'\nimport PricingFaqs from './PricingFaqs'\nimport PricingCards from './PricingCards'\nimport PricingTrial from './PricingTrial'\nimport PricingHeader from './PricingHeader'\n\nimport '@styles/base/pages/page-pricing.scss'\n\nconst Pricing = () => {\n  const [data, setData] = useState(null),\n    [faq, setFaq] = useState(null),\n    [duration, setDuration] = useState('monthly')\n\n  useEffect(() => {\n    axios.get('/pricing/data').then(res => {\n      const dataArr = [],\n        faqArr = []\n\n      Object.entries(res.data).forEach(([key, val]) => {\n        if (key !== 'qandA') {\n          dataArr.push(val)\n          setData([...dataArr])\n        } else {\n          faqArr.push(val)\n          setFaq(faqArr[0])\n        }\n      })\n    })\n  }, [])\n\n  return (\n    <div id='pricing-table'>\n      <PricingHeader duration={duration} setDuration={setDuration} />\n      {data !== null && faq !== null ? (\n        <Fragment>\n          <PricingCards data={data} duration={duration} />\n          <PricingTrial />\n          <PricingFaqs data={faq} />\n        </Fragment>\n      ) : null}\n    </div>\n  )\n}\n\nexport default Pricing\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { ChevronUp } from 'react-feather'\nimport { Collapse, Card, CardHeader, CardBody, CardTitle } from 'reactstrap'\n\nconst AppCollapse = props => {\n  // ** Props\n  const { data, type, accordion, active, toggle, titleKey, contentKey, className } = props\n\n  /**\n   ** If accordion is true then return only one active index else return an Array\n   */\n  const defaultActive = () => {\n    if (accordion) {\n      return active\n    } else {\n      return [...active]\n    }\n  }\n\n  // ** State\n  const [openCollapse, setOpenCollapse] = useState(defaultActive())\n\n  // ** Function to handle Collapse Toggle\n  const handleCollapseToggle = id => {\n    if (accordion) {\n      if (id === openCollapse) {\n        setOpenCollapse(null)\n      } else {\n        setOpenCollapse(id)\n      }\n    } else {\n      const arr = openCollapse,\n        index = arr.indexOf(id)\n      if (arr.includes(id)) {\n        arr.splice(index, 1)\n        setOpenCollapse([...arr])\n      } else {\n        arr.push(id)\n        setOpenCollapse([...arr])\n      }\n    }\n  }\n\n  // ** Function to render collapse\n  const renderData = () => {\n    return data.map((item, index) => {\n      const title = titleKey ? item[titleKey] : item.title,\n        content = contentKey ? item[contentKey] : item.content\n\n      return (\n        <Card\n          className={classnames('app-collapse', {\n            [item.className]: item.className,\n            open: accordion ? openCollapse === index : openCollapse.includes(index) && type === 'shadow'\n          })}\n          key={index}\n        >\n          <CardHeader\n            className={classnames('align-items-center', {\n              collapsed: accordion ? openCollapse !== index : !openCollapse.includes(index)\n            })}\n            /*eslint-disable */\n            {...(toggle === 'hover'\n              ? {\n                  onMouseEnter: () => handleCollapseToggle(index)\n                }\n              : {\n                  onClick: () => handleCollapseToggle(index)\n                })}\n            /*eslint-enable */\n          >\n            <CardTitle className='collapse-title'>{title}</CardTitle>\n            <ChevronUp size={14} />\n          </CardHeader>\n          <Collapse isOpen={accordion ? openCollapse === index : openCollapse.includes(index)}>\n            <CardBody>{content}</CardBody>\n          </Collapse>\n        </Card>\n      )\n    })\n  }\n\n  return (\n    <div\n      className={classnames('collapse-icon', {\n        [className]: className,\n        'collapse-default': !type,\n        'collapse-shadow': type === 'shadow',\n        'collapse-border': type === 'border',\n        'collapse-margin': type === 'margin'\n      })}\n    >\n      {renderData()}\n    </div>\n  )\n}\n\nexport default AppCollapse\n\n// ** PropTypes\nAppCollapse.propTypes = {\n  data: Proptypes.array.isRequired,\n  accordion: Proptypes.bool,\n  type: Proptypes.oneOf(['shadow', 'border', 'margin']),\n  active: Proptypes.oneOfType([Proptypes.array, Proptypes.number]),\n  titleKey: Proptypes.string,\n  contentKey: Proptypes.string,\n  className: Proptypes.string\n}\n\n// ** Default Props\nAppCollapse.defaultProps = {\n  active: [],\n  toggle: 'click'\n}\n"],"sourceRoot":""}